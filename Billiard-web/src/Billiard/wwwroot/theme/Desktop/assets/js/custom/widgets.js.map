{"version":3,"sources":["webpack://keenthemes/../../../themes/metronic/html/demo1/src/js/custom/widgets.js","webpack://keenthemes/webpack/bootstrap","webpack://keenthemes/webpack/startup"],"names":[],"mappings":";;;;;;;;;;AAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,+BAA+B;AAC/B;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,E;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,+BAA+B;AAC/B;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,E;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,uB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,2BAA2B;AAC3B;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gE;AACA,2E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,2BAA2B;AAC3B;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gE;AACA,2E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,2BAA2B;AAC3B;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,+BAA+B;AAC/B;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2B;AACA,SAAS,E;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,+BAA+B;AAC/B;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,E;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,SAAS,E;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,+BAA+B;AAC/B;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,E;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,+BAA+B;AAC/B;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,E;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,+BAA+B;AAC/B;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,E;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2B;AACA,SAAS,E;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uD;AACA,gD;;AAEA;AACA,iBAAiB,Q;AACjB,aAAa;AACb,S;AACA,K;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,Q;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,Q;AACrB,iB;AACA,aAAa;AACb,S;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,S;AACA;AACA,CAAC;;AAED;AACA,IAAI,IAA6B;AACjC;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;UCn5ED;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UCtBA;UACA;UACA;UACA","file":"js/custom/widgets.js","sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTWidgets = function () {\r\n    // Statistics widgets\r\n    var initStatisticsWidget3 = function() {\r\n        var charts = document.querySelectorAll('.statistics-widget-3-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(PPCUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-ppc-chart-color');\r\n\r\n            var labelColor = PPCUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n            var baseColor = PPCUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = PPCUtil.getCssVariableValue('--bs-light-' + color );\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [30, 45, 32, 70, 40]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 1\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [baseColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: '#E4E6EF',\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 80,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function(val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                fill: {\r\n                    type: 'gradient',\r\n                    gradient: {\r\n                        stops: [0, 100]\r\n                    }\r\n                },\r\n                colors: [baseColor],\r\n                markers: {\r\n                    colors: [baseColor],\r\n                    strokeColor: [lightColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });        \r\n    }\r\n\r\n    var initStatisticsWidget4 = function() {\r\n        var charts = document.querySelectorAll('.statistics-widget-4-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(PPCUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-ppc-chart-color');\r\n\r\n            var labelColor = PPCUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n            var baseColor = PPCUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = PPCUtil.getCssVariableValue('--bs-light-' + color );\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [40, 40, 30, 30, 35, 35, 50]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 1\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [baseColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: '#E4E6EF',\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 60,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function(val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                fill: {\r\n                    type: 'gradient',\r\n                    gradient: {\r\n                        stops: [0, 100]\r\n                    }\r\n                },\r\n                colors: [baseColor],\r\n                markers: {\r\n                    colors: [baseColor],\r\n                    strokeColor: [lightColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });        \r\n    }\r\n\r\n    // Charts widgets\r\n    var initChartsWidget1 = function() {\r\n        var element = document.getElementById(\"ppc_charts_widget_1_chart\");\r\n\r\n        var height = parseInt(PPCUtil.css(element, 'height'));\r\n        var labelColor = PPCUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = PPCUtil.getCssVariableValue('--bs-gray-200');\r\n        var baseColor = PPCUtil.getCssVariableValue('--bs-primary');\r\n        var secondaryColor = PPCUtil.getCssVariableValue('--bs-gray-300');\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: [44, 55, 57, 56, 61, 58]\r\n            }, {\r\n                name: 'Revenue',\r\n                data: [76, 85, 101, 98, 87, 105]\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'bar',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: false,\r\n                    columnWidth: ['30%'],\r\n                    endingShape: 'rounded'\r\n                },\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                show: true,\r\n                width: 2,\r\n                colors: ['transparent']\r\n            },\r\n            xaxis: {\r\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            fill: {\r\n                opacity: 1\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [baseColor, secondaryColor],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        chart.render();      \r\n    }\r\n\r\n    var initChartsWidget2 = function() {\r\n        var element = document.getElementById(\"ppc_charts_widget_2_chart\");\r\n\r\n        var height = parseInt(PPCUtil.css(element, 'height'));\r\n        var labelColor = PPCUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = PPCUtil.getCssVariableValue('--bs-gray-200');\r\n        var baseColor = PPCUtil.getCssVariableValue('--bs-warning');\r\n        var secondaryColor = PPCUtil.getCssVariableValue('--bs-gray-300');\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: [44, 55, 57, 56, 61, 58]\r\n            }, {\r\n                name: 'Revenue',\r\n                data: [76, 85, 101, 98, 87, 105]\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'bar',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: false,\r\n                    columnWidth: ['30%'],\r\n                    endingShape: 'rounded'\r\n                },\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                show: true,\r\n                width: 2,\r\n                colors: ['transparent']\r\n            },\r\n            xaxis: {\r\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            fill: {\r\n                opacity: 1\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [baseColor, secondaryColor],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        chart.render();   \r\n    }\r\n\r\n    var initChartsWidget3 = function() {\r\n        var element = document.getElementById(\"ppc_charts_widget_3_chart\");\r\n\r\n        var height = parseInt(PPCUtil.css(element, 'height'));\r\n        var labelColor = PPCUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = PPCUtil.getCssVariableValue('--bs-gray-200');\r\n        var baseColor = PPCUtil.getCssVariableValue('--bs-info');\r\n        var lightColor = PPCUtil.getCssVariableValue('--bs-light-info');\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: [30, 40, 40, 90, 90, 70, 70]\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'area',\r\n                height: 350,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            fill: {\r\n                type: 'solid',\r\n                opacity: 1\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                show: true,\r\n                width: 3,\r\n                colors: [baseColor]\r\n            },\r\n            xaxis: {\r\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                },\r\n                crosshairs: {\r\n                    position: 'front',\r\n                    stroke: {\r\n                        color: baseColor,\r\n                        width: 1,\r\n                        dashArray: 3\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    formatter: undefined,\r\n                    offsetY: 0,\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [lightColor],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            },\r\n            markers: {\r\n                strokeColor: baseColor,\r\n                strokeWidth: 3\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        chart.render();   \r\n    }\r\n\r\n    var initChartsWidget4 = function() {\r\n        var element = document.getElementById(\"ppc_charts_widget_4_chart\");\r\n\r\n        var height = parseInt(PPCUtil.css(element, 'height'));\r\n        var labelColor = PPCUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = PPCUtil.getCssVariableValue('--bs-gray-200');\r\n\r\n        var baseColor = PPCUtil.getCssVariableValue('--bs-success');\r\n        var baseLightColor = PPCUtil.getCssVariableValue('--bs-light-success');\r\n        var secondaryColor = PPCUtil.getCssVariableValue('--bs-warning');\r\n        var secondaryLightColor = PPCUtil.getCssVariableValue('--bs-light-warning');\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: [60, 50, 80, 40, 100, 60]\r\n            }, {\r\n                name: 'Revenue',\r\n                data: [70, 60, 110, 40, 50, 70]\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'area',\r\n                height: 350,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {},\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            fill: {\r\n                type: 'solid',\r\n                opacity: 1\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            xaxis: {\r\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                },\r\n                crosshairs: {\r\n                    position: 'front',\r\n                    stroke: {\r\n                        color: labelColor,\r\n                        width: 1,\r\n                        dashArray: 3\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    formatter: undefined,\r\n                    offsetY: 0,\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [baseColor, secondaryColor],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            },\r\n            markers: {\r\n                colors: [baseLightColor, secondaryLightColor],\r\n                strokeColor: [baseLightColor, secondaryLightColor],\r\n                strokeWidth: 3\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        chart.render();   \r\n    }\r\n\r\n    var initChartsWidget5 = function() {\r\n        var element = document.getElementById(\"ppc_charts_widget_5_chart\");\r\n\r\n        var height = parseInt(PPCUtil.css(element, 'height'));\r\n        var labelColor = PPCUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = PPCUtil.getCssVariableValue('--bs-gray-200');\r\n\r\n        var baseColor = PPCUtil.getCssVariableValue('--bs-primary');\r\n        var secondaryColor = PPCUtil.getCssVariableValue('--bs-info');\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: [40, 50, 65, 70, 50, 30]\r\n            }, {\r\n                name: 'Revenue',\r\n                data: [-30, -40, -55, -60, -40, -20]\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'bar',\r\n                stacked: true,\r\n                height: 350,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: false,\r\n                    columnWidth: ['12%'],\r\n                    endingShape: 'rounded'\r\n                },\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                show: true,\r\n                width: 2,\r\n                colors: ['transparent']\r\n            },\r\n            xaxis: {\r\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                min: -80,\r\n                max: 80,\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            fill: {\r\n                opacity: 1\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [baseColor, secondaryColor],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        chart.render();   \r\n    }\r\n\r\n    var initChartsWidget6 = function() {\r\n        var element = document.getElementById(\"ppc_charts_widget_6_chart\");\r\n\r\n        var height = parseInt(PPCUtil.css(element, 'height'));\r\n        var labelColor = PPCUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = PPCUtil.getCssVariableValue('--bs-gray-200');\r\n\r\n        var baseColor = PPCUtil.getCssVariableValue('--bs-primary');\r\n        var baseLightColor = PPCUtil.getCssVariableValue('--bs-light-primary');\r\n        var secondaryColor = PPCUtil.getCssVariableValue('--bs-info');        \r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                type: 'bar',\r\n                stacked: true,\r\n                data: [40, 50, 65, 70, 50, 30]\r\n            }, {\r\n                name: 'Revenue',\r\n                type: 'bar',\r\n                stacked: true,\r\n                data: [20, 20, 25, 30, 30, 20]\r\n            }, {\r\n                name: 'Expenses',\r\n                type: 'area',\r\n                data: [50, 80, 60, 90, 50, 70]\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                stacked: true,\r\n                height: 350,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    stacked: true,\r\n                    horizontal: false,\r\n                    endingShape: 'rounded',\r\n                    columnWidth: ['12%']\r\n                },\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                show: true,\r\n                width: 2,\r\n                colors: ['transparent']\r\n            },\r\n            xaxis: {\r\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                max: 120,\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            fill: {\r\n                opacity: 1\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [baseColor, secondaryColor, baseLightColor],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                },\r\n                padding: {\r\n                    top: 0,\r\n                    right: 0,\r\n                    bottom: 0,\r\n                    left: 0\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        chart.render();   \r\n    }\r\n\r\n    var initChartsWidget7 = function() {\r\n        var element = document.getElementById(\"ppc_charts_widget_7_chart\");\r\n\r\n        var height = parseInt(PPCUtil.css(element, 'height'));\r\n\r\n        var labelColor = PPCUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = PPCUtil.getCssVariableValue('--bs-gray-200');\r\n        var strokeColor = PPCUtil.getCssVariableValue('--bs-gray-300');\r\n\r\n        var color1 = PPCUtil.getCssVariableValue('--bs-warning');\r\n        var color1Light = PPCUtil.getCssVariableValue('--bs-light-warning');\r\n\r\n        var color2 = PPCUtil.getCssVariableValue('--bs-success');\r\n        var color2Light = PPCUtil.getCssVariableValue('--bs-light-success');\r\n\r\n        var color3 = PPCUtil.getCssVariableValue('--bs-primary');  \r\n        var color3Light = PPCUtil.getCssVariableValue('--bs-light-primary');  \r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: [30, 30, 50, 50, 35, 35]\r\n            }, {\r\n                name: 'Revenue',\r\n                data: [55, 20, 20, 20, 70, 70]\r\n            }, {\r\n                name: 'Expenses',\r\n                data: [60, 60, 40, 40, 30, 30]\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'area',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                },\r\n                zoom: {\r\n                    enabled: false\r\n                },\r\n                sparkline: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            plotOptions: {},\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            fill: {\r\n                type: 'solid',\r\n                opacity: 1\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                show: true,\r\n                width: 2,\r\n                colors: [color1, 'transparent', 'transparent']\r\n            },\r\n            xaxis: {\r\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    show: false,\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                },\r\n                crosshairs: {\r\n                    show: false,\r\n                    position: 'front',\r\n                    stroke: {\r\n                        color: strokeColor,\r\n                        width: 1,\r\n                        dashArray: 3\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    formatter: undefined,\r\n                    offsetY: 0,\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    show: false,\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [color1, color2, color3],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            },\r\n            markers: {\r\n                colors: [color1Light, color2Light, color3Light],\r\n                strokeColor: [color1, color2, color3],\r\n                strokeWidth: 3\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        chart.render();   \r\n    }\r\n\r\n    var initChartsWidget8 = function() {\r\n        var element = document.getElementById(\"ppc_charts_widget_8_chart\");\r\n\r\n        var height = parseInt(PPCUtil.css(element, 'height'));\r\n\r\n        var labelColor = PPCUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = PPCUtil.getCssVariableValue('--bs-gray-200');\r\n        var strokeColor = PPCUtil.getCssVariableValue('--bs-gray-300');\r\n\r\n        var color1 = PPCUtil.getCssVariableValue('--bs-warning');\r\n        var color1Light = PPCUtil.getCssVariableValue('--bs-light-warning');\r\n\r\n        var color2 = PPCUtil.getCssVariableValue('--bs-success');\r\n        var color2Light = PPCUtil.getCssVariableValue('--bs-light-success');\r\n\r\n        var color3 = PPCUtil.getCssVariableValue('--bs-primary');  \r\n        var color3Light = PPCUtil.getCssVariableValue('--bs-light-primary');  \r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: [30, 30, 50, 50, 35, 35]\r\n            }, {\r\n                name: 'Revenue',\r\n                data: [55, 20, 20, 20, 70, 70]\r\n            }, {\r\n                name: 'Expenses',\r\n                data: [60, 60, 40, 40, 30, 30]\r\n            },],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'area',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                },\r\n                zoom: {\r\n                    enabled: false\r\n                },\r\n                sparkline: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            plotOptions: {},\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            fill: {\r\n                type: 'solid',\r\n                opacity: 1\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                show: true,\r\n                width: 2,\r\n                colors: [color1, color2, color3]\r\n            },\r\n            xaxis: {\r\n                x: 0,\r\n                offsetX: 0,\r\n                offsetY: 0,\r\n                padding: {\r\n                    left: 0,\r\n                    right: 0,\r\n                    top: 0,\r\n                },\r\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    show: false,\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                },\r\n                crosshairs: {\r\n                    show: false,\r\n                    position: 'front',\r\n                    stroke: {\r\n                        color: strokeColor,\r\n                        width: 1,\r\n                        dashArray: 3\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    formatter: undefined,\r\n                    offsetY: 0,\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                y: 0,\r\n                offsetX: 0,\r\n                offsetY: 0,\r\n                padding: {\r\n                    left: 0,\r\n                    right: 0\r\n                },\r\n                labels: {\r\n                    show: false,\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [color1Light, color2Light, color3Light],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                padding: {\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    left: 0,\r\n                    right: 0\r\n                }\r\n            },\r\n            markers: {\r\n                colors: [color1, color2, color3],\r\n                strokeColor: [color1, color2, color3],\r\n                strokeWidth: 3\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        chart.render();   \r\n    }\r\n\r\n    // Mixed widgets\r\n    var initMixedWidget2 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-2-chart');\r\n\r\n        var color;\r\n        var strokeColor;\r\n        var height;\r\n        var labelColor = PPCUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = PPCUtil.getCssVariableValue('--bs-gray-200');\r\n        var options;\r\n        var chart;\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            height = parseInt(PPCUtil.css(element, 'height'));\r\n            color = PPCUtil.getCssVariableValue('--bs-' + element.getAttribute(\"data-ppc-color\"));\r\n            strokeColor = PPCUtil.colorDarken(color, 15);\r\n\r\n            options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [30, 45, 32, 70, 40, 40, 40]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    },\r\n                    dropShadow: {\r\n                        enabled: true,\r\n                        enabledOnSeries: undefined,\r\n                        top: 5,\r\n                        left: 0,\r\n                        blur: 3,\r\n                        color: strokeColor,\r\n                        opacity: 0.5\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 0\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [strokeColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: borderColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 80,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px',\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    },\r\n                    marker: {\r\n                        show: false\r\n                    }\r\n                },\r\n                colors: ['transparent'],\r\n                markers: {\r\n                    colors: [color],\r\n                    strokeColor: [strokeColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            chart = new ApexCharts(element, options);\r\n            chart.render();  \r\n        });        \r\n    }\r\n\r\n    var initMixedWidget3 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-3-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(PPCUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-ppc-chart-color');\r\n\r\n            var labelColor = PPCUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n            var strokeColor = PPCUtil.getCssVariableValue('--bs-' + 'gray-300');\r\n            var baseColor = PPCUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = PPCUtil.getCssVariableValue('--bs-light-' + color );\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [30, 25, 45, 30, 55, 55]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 1\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [baseColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: strokeColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 60,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [lightColor],\r\n                markers: {\r\n                    colors: [lightColor],\r\n                    strokeColor: [baseColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });        \r\n    }\r\n\r\n    var initMixedWidget4 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-4-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(PPCUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-ppc-chart-color');\r\n\r\n            var baseColor = PPCUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = PPCUtil.getCssVariableValue('--bs-light-' + color );\r\n            var labelColor = PPCUtil.getCssVariableValue('--bs-' + 'gray-700');\r\n\r\n            var options = {\r\n                series: [74],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    height: height,\r\n                    type: 'radialBar',\r\n                },\r\n                plotOptions: {\r\n                    radialBar: {\r\n                        hollow: {\r\n                            margin: 0,\r\n                            size: \"65%\"\r\n                        },\r\n                        dataLabels: {\r\n                            showOn: \"always\",\r\n                            name: {\r\n                                show: false,\r\n                                fontWeight: '700'\r\n                            },\r\n                            value: {\r\n                                color: labelColor,\r\n                                fontSize: \"30px\",\r\n                                fontWeight: '700',\r\n                                offsetY: 12,\r\n                                show: true,\r\n                                formatter: function (val) {\r\n                                    return val + '%';\r\n                                }\r\n                            }\r\n                        },\r\n                        track: {\r\n                            background: lightColor,\r\n                            strokeWidth: '100%'\r\n                        }\r\n                    }\r\n                },\r\n                colors: [baseColor],\r\n                stroke: {\r\n                    lineCap: \"round\",\r\n                },\r\n                labels: [\"Progress\"]\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });        \r\n    }\r\n\r\n    var initMixedWidget5 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-5-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(PPCUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-ppc-chart-color');\r\n\r\n            var labelColor = PPCUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n            var strokeColor = PPCUtil.getCssVariableValue('--bs-' + 'gray-300');\r\n            var baseColor = PPCUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = PPCUtil.getCssVariableValue('--bs-light-' + color );\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [30, 30, 60, 25, 25, 40]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'gradient',\r\n                    opacity: 1,\r\n                    gradient: {\r\n                        type: \"vertical\",\r\n                        shadeIntensity: 0.5,\r\n                        gradientToColors: undefined,\r\n                        inverseColors: true,\r\n                        opacityFrom: 1,\r\n                        opacityTo: 0.375,\r\n                        stops: [25, 50, 100],\r\n                        colorStops: []\r\n                    }\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [baseColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: strokeColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 65,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [lightColor],\r\n                markers: {\r\n                    colors: [lightColor],\r\n                    strokeColor: [baseColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });        \r\n    }\r\n\r\n    var initMixedWidget6 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-6-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(PPCUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-ppc-chart-color');\r\n\r\n            var labelColor = PPCUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n            var strokeColor = PPCUtil.getCssVariableValue('--bs-' + 'gray-300');\r\n            var baseColor = PPCUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = PPCUtil.getCssVariableValue('--bs-light-' + color );\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [30, 25, 45, 30, 55, 55]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 1\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [baseColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: strokeColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 60,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [lightColor],\r\n                markers: {\r\n                    colors: [lightColor],\r\n                    strokeColor: [baseColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });        \r\n    }\r\n\r\n    var initMixedWidget7 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-7-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(PPCUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-ppc-chart-color');\r\n\r\n            var labelColor = PPCUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n            var strokeColor = PPCUtil.getCssVariableValue('--bs-' + 'gray-300');\r\n            var baseColor = PPCUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = PPCUtil.getCssVariableValue('--bs-light-' + color );\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [15, 25, 15, 40, 20, 50]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 1\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [baseColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: strokeColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 60,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [lightColor],\r\n                markers: {\r\n                    colors: [lightColor],\r\n                    strokeColor: [baseColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });        \r\n    }\r\n\r\n    var initMixedWidget10 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-10-chart');\r\n\r\n        var color;\r\n        var height;\r\n        var labelColor = PPCUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = PPCUtil.getCssVariableValue('--bs-gray-200');\r\n        var baseLightColor;\r\n        var secondaryColor = PPCUtil.getCssVariableValue('--bs-gray-300');\r\n        var baseColor;\r\n        var options;\r\n        var chart;\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            color = element.getAttribute(\"data-ppc-color\");\r\n            height = parseInt(PPCUtil.css(element, 'height'));\r\n            baseColor = PPCUtil.getCssVariableValue('--bs-' + color);\r\n\r\n            options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [50, 60, 70, 80, 60, 50, 70, 60]\r\n                }, {\r\n                    name: 'Revenue',\r\n                    data: [50, 60, 70, 80, 60, 50, 70, 60]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'bar',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        horizontal: false,\r\n                        columnWidth: ['50%'],\r\n                        endingShape: 'rounded'\r\n                    },\r\n                },\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                stroke: {\r\n                    show: true,\r\n                    width: 2,\r\n                    colors: ['transparent']\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    y: 0,\r\n                    offsetX: 0,\r\n                    offsetY: 0,\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                fill: {\r\n                    type: 'solid'\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" revenue\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [baseColor, secondaryColor],\r\n                grid: {\r\n                    padding: {\r\n                        top: 10\r\n                    },\r\n                    borderColor: borderColor,\r\n                    strokeDashArray: 4,\r\n                    yaxis: {\r\n                        lines: {\r\n                            show: true\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            chart = new ApexCharts(element, options);\r\n            chart.render();      \r\n        });        \r\n    }\r\n\r\n    // Feeds Widgets\r\n    var initFeedWidget1 = function() {\r\n        var formEl = document.querySelector(\"#ppc_forms_widget_1_form\");\r\n        var editorId = 'ppc_forms_widget_1_editor';\r\n\r\n        if ( !formEl ) {\r\n            return;\r\n        }\r\n\r\n        // init editor\r\n        var options = {\r\n            modules: {\r\n                toolbar: {\r\n                    container: \"#ppc_forms_widget_1_editor_toolbar\"\r\n                }\r\n            },\r\n            placeholder: 'What is on your mind ?',\r\n            theme: 'snow'\r\n        };\r\n\r\n        if (!formEl) {\r\n            return;\r\n        }\r\n\r\n        // Init editor\r\n        var editorObj = new Quill('#' + editorId, options);\r\n    }\r\n\r\n    var initFeedsWidget4 = function() {\r\n        var btn = document.querySelector('#ppc_widget_5_load_more_btn');\r\n        var widget5 = document.querySelector('#ppc_widget_5');\r\n\r\n        if (btn) {\r\n            btn.addEventListener('click', function(e){\r\n                e.preventDefault();\r\n                btn.setAttribute('data-ppc-indicator', 'on');\r\n\r\n                setTimeout(function() {\r\n                    btn.removeAttribute('data-ppc-indicator');\r\n                    widget5.classList.remove('d-none');         \r\n                    btn.classList.add('d-none');         \r\n                    \r\n                    PPCUtil.scrollTo(widget5, 200);\r\n                }, 2000);                \r\n            });\r\n        }                 \r\n    }  \r\n\r\n    // Follow button\r\n    var initUserFollowButton = function() {\r\n        var follow = document.querySelector('#ppc_user_follow_button');\r\n\r\n        if (follow) {\r\n            follow.addEventListener('click', function(e){\r\n                // Prevent default action \r\n                e.preventDefault();\r\n                \r\n                // Show indicator\r\n                follow.setAttribute('data-ppc-indicator', 'on');\r\n                \r\n                // Disable button to avoid multiple click \r\n\t\t\t\tfollow.disabled = true;\r\n\r\n                // Check button state\r\n                if (follow.classList.contains(\"btn-success\")) {\r\n                     setTimeout(function() {\r\n                        follow.removeAttribute('data-ppc-indicator');\r\n                        follow.classList.remove(\"btn-success\");\r\n                        follow.classList.add(\"btn-light\");\r\n                        follow.querySelector(\".svg-icon\").classList.add(\"d-none\");\r\n                        follow.querySelector(\".indicator-label\").innerHTML = 'Follow';\r\n\t\t\t\t        follow.disabled = false;\r\n                    }, 1500);   \r\n                } else {\r\n                     setTimeout(function() {\r\n                        follow.removeAttribute('data-ppc-indicator');\r\n                        follow.classList.add(\"btn-success\");\r\n                        follow.classList.remove(\"btn-light\");\r\n                        follow.querySelector(\".svg-icon\").classList.remove(\"d-none\");\r\n                        follow.querySelector(\".indicator-label\").innerHTML = 'Following';\r\n                        follow.disabled = false;\r\n                    }, 1000);   \r\n                }        \r\n            });\r\n        }                 \r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            // Statistics widgets\r\n            initStatisticsWidget3();\r\n            initStatisticsWidget4();\r\n\r\n            // Charts widgets\r\n            initChartsWidget1();\r\n            initChartsWidget2();\r\n            initChartsWidget3();\r\n            initChartsWidget4();\r\n            initChartsWidget5();\r\n            initChartsWidget6();\r\n            initChartsWidget7();\r\n            initChartsWidget8();\r\n\r\n            // Mixed widgets\r\n            initMixedWidget2();\r\n            initMixedWidget3();\r\n            initMixedWidget4();\r\n            initMixedWidget5();\r\n            initMixedWidget6();\r\n            initMixedWidget7();\r\n            initMixedWidget10();\r\n\r\n            // Feeds\r\n            initFeedWidget1();\r\n            initFeedsWidget4();\r\n\r\n            // Follow button\r\n            initUserFollowButton();\r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTWidgets;\r\n}\r\n\r\n// On document ready\r\nPPCUtil.onDOMContentLoaded(function() {\r\n    KTWidgets.init();\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"../../../themes/metronic/html/demo1/src/js/custom/widgets.js\");\n"],"sourceRoot":""}